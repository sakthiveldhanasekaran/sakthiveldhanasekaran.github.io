{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "prettier"],
  "rules": {
    "indent": ["warn", 2],
    "linebreak-style": "off",
    // "quotes": ["off", "single", { "allowTemplateLiterals": true }],
    "semi": ["error", "always"],
    "camelcase": "off",
    "dot-notation": "error",
    "no-shadow": "error",
    "brace-style": "error",
    "arrow-parens": ["error", "as-needed"],
    "curly": "warn",
    "max-len": [
      "warn",
      {
        "code": 80,
        "ignoreUrls": true,
        "ignoreComments": true,
        "ignoreTrailingComments": true
      }
    ],
    "newline-per-chained-call": "off",
    "prefer-template": "warn",
    "prefer-const": "warn",
    "radix": "error",
    "space-in-parens": "error",
    "lines-between-class-members": [
      "warn",
      {
        "enforce": [
          { "blankLine": "never", "prev": "*", "next": "field" },
          { "blankLine": "always", "prev": "field", "next": "method" },
          { "blankLine": "always", "prev": "method", "next": "method" }
        ]
      }
    ],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "warn",
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true,
        "allowConciseArrowFunctionExpressionsStartingWithVoid": true
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": [
      "warn",
      {
        "accessibility": "explicit",
        "ignoredMethodNames": ["constructor"]
      }
    ],
    "@typescript-eslint/member-ordering": [
      "warn",
      {
        "default": [
          // Index signature
          "signature",
          // Fields
          "decorated-field",
          "field",
          // Constructors
          "constructor",
          // Getters
          "get",
          // Setters
          "set",
          // Methods
          "decorated-method",
          "method"
        ]
      }
    ],
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "default",
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "require"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },
      {
        "selector": "objectLiteralProperty",
        "format": null
      },
      {
        "selector": "objectLiteralMethod",
        "format": null
      },
      {
        "selector": "variable",
        "modifiers": ["const", "exported"],
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/quotes": "off",
    "prettier/prettier": ["warn"]
  }
}
